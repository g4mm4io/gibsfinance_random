// This file was autogenerated by hardhat-viem, do not edit it.
// prettier-ignore
// tslint:disable
// eslint-disable

import type { Address } from "viem";
import type { GetContractReturnType } from "@nomicfoundation/hardhat-viem/types";
import "@nomicfoundation/hardhat-viem/types";

export interface MulticallerEtcher$Type {
  "_format": "hh-sol-artifact-1",
  "contractName": "MulticallerEtcher",
  "sourceName": "multicaller/src/MulticallerEtcher.sol",
  "abi": [],
  "bytecode": "0x6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea264697066735822122061ad5eb2ff437443e192c6a0123a18a34def196a8232fa16680b8cdb919a193e64736f6c63430008190033",
  "deployedBytecode": "0x5f80fdfea264697066735822122061ad5eb2ff437443e192c6a0123a18a34def196a8232fa16680b8cdb919a193e64736f6c63430008190033",
  "linkReferences": {},
  "deployedLinkReferences": {}
}

declare module "@nomicfoundation/hardhat-viem/types" {
  export function deployContract(
    contractName: "MulticallerEtcher",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<MulticallerEtcher$Type["abi"]>>;
  export function deployContract(
    contractName: "multicaller/src/MulticallerEtcher.sol:MulticallerEtcher",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<MulticallerEtcher$Type["abi"]>>;

  export function sendDeploymentTransaction(
    contractName: "MulticallerEtcher",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<MulticallerEtcher$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;
  export function sendDeploymentTransaction(
    contractName: "multicaller/src/MulticallerEtcher.sol:MulticallerEtcher",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<MulticallerEtcher$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;

  export function getContractAt(
    contractName: "MulticallerEtcher",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<MulticallerEtcher$Type["abi"]>>;
  export function getContractAt(
    contractName: "multicaller/src/MulticallerEtcher.sol:MulticallerEtcher",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<MulticallerEtcher$Type["abi"]>>;
}
