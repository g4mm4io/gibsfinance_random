// This file was autogenerated by hardhat-viem, do not edit it.
// prettier-ignore
// tslint:disable
// eslint-disable

import type { Address } from "viem";
import type { GetContractReturnType } from "@nomicfoundation/hardhat-viem/types";
import "@nomicfoundation/hardhat-viem/types";

export interface LibBit$Type {
  "_format": "hh-sol-artifact-1",
  "contractName": "LibBit",
  "sourceName": "solady/src/utils/LibBit.sol",
  "abi": [],
  "bytecode": "0x6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220e84c73dc158691b6a3a591db049f55540da4ac2e37056644dc3d070073c1dcc164736f6c63430008190033",
  "deployedBytecode": "0x5f80fdfea2646970667358221220e84c73dc158691b6a3a591db049f55540da4ac2e37056644dc3d070073c1dcc164736f6c63430008190033",
  "linkReferences": {},
  "deployedLinkReferences": {}
}

declare module "@nomicfoundation/hardhat-viem/types" {
  export function deployContract(
    contractName: "LibBit",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<LibBit$Type["abi"]>>;
  export function deployContract(
    contractName: "solady/src/utils/LibBit.sol:LibBit",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<LibBit$Type["abi"]>>;

  export function sendDeploymentTransaction(
    contractName: "LibBit",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<LibBit$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;
  export function sendDeploymentTransaction(
    contractName: "solady/src/utils/LibBit.sol:LibBit",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<LibBit$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;

  export function getContractAt(
    contractName: "LibBit",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<LibBit$Type["abi"]>>;
  export function getContractAt(
    contractName: "solady/src/utils/LibBit.sol:LibBit",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<LibBit$Type["abi"]>>;
}
