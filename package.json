{
  "name": "hardhat-project",
  "devDependencies": {
    "@babel/preset-env": "^7.25.3",
    "@babel/preset-typescript": "^7.24.7",
    "@graphprotocol/graph-cli": "^0.80.0",
    "@graphprotocol/graph-ts": "^0.35.1",
    "@nomicfoundation/hardhat-chai-matchers": "^2.0.7",
    "@nomicfoundation/hardhat-toolbox-viem": "^3.0.0",
    "@nomicfoundation/hardhat-verify": "^2.0.9",
    "@nomicfoundation/hardhat-viem": "^2.0.3",
    "@solidstate/hardhat-4byte-uploader": "^1.2.2",
    "@types/chai": "^4.3.17",
    "@types/debug": "^4.1.12",
    "@types/knex": "^0.16.1",
    "@types/pg": "^8.11.6",
    "@types/yargs": "^17.0.33",
    "chai": "^4.5.0",
    "chai-as-promised": "^8.0.0",
    "debug": "^4.3.6",
    "eslint": "^8.57.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-standard": "^17.1.0",
    "eslint-import-resolver-typescript": "^3.6.1",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-lodash": "^8.0.0",
    "eslint-plugin-mocha": "^10.5.0",
    "hardhat": "^2.22.8",
    "hardhat-dependency-compiler": "^1.2.1",
    "hardhat-tracer": "^3.1.0",
    "knex": "^3.1.0",
    "mocha": "^10.7.0",
    "multicaller": "^1.3.2",
    "pg": "^8.12.0",
    "solidity-coverage": "^0.8.12",
    "tsx": "^4.17.0",
    "typescript-eslint": "^8.1.0",
    "yargs": "^17.7.2"
  },
  "dependencies": {
    "@openzeppelin/contracts": "^5.0.2",
    "@types/lodash": "^4.17.7",
    "@types/mocha": "^10.0.7",
    "lodash": "^4.17.21",
    "matchstick-as": "^0.6.0",
    "promise-limit": "^2.7.0",
    "solady": "^0.0.228"
  },
  "scripts": {
    "test": "NODE_OPTIONS=--max-old-space-size=8192 hardhat --max-memory 8192 test",
    "coverage": "SOLIDITY_COVERAGE=true NODE_OPTIONS=--max-old-space-size=8192 hardhat --max-memory 8192 coverage",
    "build": "hardhat compile",
    "generate-randomness": "tsx ./lib/bin/generate.ts",
    "collect": "hardhat collect",
    "clean": "rm -rf cache artifacts coverage coverage.json",
    "codegen": "npm run create:config && graph codegen",
    "create:config": "mustache configs/$NETWORK.json subgraph.template.yaml > subgraph.yaml",
    "graph:build": "npm run create:config && graph build",
    "create": "npm run create:config && graph create $NETWORK/speaknow --node $GRAPH_SERVER",
    "deploy": "npm run create:config && graph deploy $NETWORK/speaknow --node $GRAPH_SERVER --ipfs $IPFS_SERVER"
  }
}
